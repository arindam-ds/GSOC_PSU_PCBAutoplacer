/*
* Copyright 2014 Arindam Bannerjee
* This work is distributed under the terms of the "MIT license". Please see the file
* LICENSE in this distribution for license terms.
*
*/

package edu.pdx.placer;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import edu.pdx.parser.*;
import edu.pdx.pcbparser.*;
import edu.pdx.partitioner.*;

public class Placer {

	/**
	 * @param args
	 */
  public static void main(String[] args) {
	  
    if (args.length != 2) {
	  System.err.println("Invalid command line, exactly two arguments required to specify input files, the .net file name and .kicad_pcb file name respectively generated by KiCAD");
	  System.exit(1);
	}
    try{
      PcbParser p = new PcbParser(args[1]);
      p.pcbParse();
      FmHeuristic fmh = new FmHeuristic(args[0], args[1]);
      fmh.FmVerticalPartitioner();
      fmh.FmHorizontalPartitioner();
      float hpwl = fmh.CalculateHpwl(args[1]);
      System.out.println("HPWL before placement: "+hpwl);
      ComponentPlacer cp;
      cp = new ComponentPlacer(args[1], fmh.topLeftBucket, p.moduleList, 1);
      cp.placer();
      cp = new ComponentPlacer(args[1], fmh.topRightBucket, p.moduleList, 2);
      cp.placer();
      cp = new ComponentPlacer(args[1], fmh.bottomLeftBucket, p.moduleList, 3);
      cp.placer();
      cp = new ComponentPlacer(args[1], fmh.bottomRightBucket, p.moduleList, 4);
      cp.placer();
      hpwl = fmh.CalculateHpwl("placed_"+args[1]);
      System.out.println("HPWL after placement: "+hpwl);
    }catch(Exception e){
      System.err.println("Error_: " + e.getMessage());
    }
  }
}
